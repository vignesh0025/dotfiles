# https://man7.org/linux/man-pages/man1/tmux.1.html
# Use tmux -vv to get log files in the current directory: THis includes the plugin information
# as well
# bind-key   -> Binds Keys default (without -T), the key is bound in the prefix key table
# alias: bind
# bind-key -T-> Binds Keys globally and doesn't require prefix key
# send-keys      -> send a key to a window such as C-a
# (alias: send)  -X is used to send a command into copy mode
#                -M passes through a mouse event
# send-prefix-> Send prefix keys to a window

set-option -g default-shell /bin/zsh

set -g prefix C-q
bind C-q send-prefix

#setting delay between prefix and command
set -s escape-time 1

#Status Keys
set -g status-keys vi

#VI Working buffer
setw -g mode-keys vi

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g base-index 1
setw -g pane-base-index 1

# Enable color support inside of tmux.
# set -g default-terminal "screen-256color"
set -g terminal-overrides ",alacritty:RGB"
set -ga terminal-overrides ",*256col*:Tc"

# Ensure window titles get renamed automatically.
#setw -g automatic-rename
set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
# Mouse support
# '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
# Enable full mouse support.
setw -g mouse on
# '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# Status bar and colors
# '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# Status bar.
#set -g status-style fg=colour43,bg=default
#set -g status-left-length 20
# set -g status-left '#{cpu_fg_color}CPU:#{cpu_percentage} #{ram_fg_color}RAM:#{ram_percentage}'
# set -g status-right '%a %Y-%m-%d %H:%M #{cpu_fg_color}CPU:#{cpu_percentage} #{ram_fg_color}RAM:#{ram_percentage}'

#set -g pane-border-style fg=default,bg=default
#set -g pane-active-border-style fg=colour69,bg=default

# **Highlight** the active window in the status bar.
#set-window-option -g window-status-current-style fg=colour226,bold

#active pane normal, other shaded out
#setw -g window-style fg=colour240,bg=colour235
#setw -g window-active-style fg=white,bg=black

# Command / message line
#set -g message-style fg=white,bold,bg=black

# Enable activity alerts when working on other window
setw -g monitor-activity on
set -g visual-activity on

#Justify status line
#set -g status-justify centre

#Move status bar to top
set-option -g status-position top
# -----------------------------------------------------------------------------
# Unbind default keys
# -----------------------------------------------------------------------------
unbind C-z
unbind C-b
unbind '"'
unbind %

# -----------------------------------------------------------------------------
# Remap new bindings
# -----------------------------------------------------------------------------
# Reload the tmux config.
bind-key r source-file ~/.tmux.conf\; display 'Reloaded!'

# Split panes and change current folder to current path
bind-key s split-window -v -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key n new-window -c "$HOME"

# Open htop in a new window
bind-key h split-window -v -c "#{pane_current_path}" "bash;htop"

# Not Required as c is already the shortcut.
# Enable if you want to change the default directory
# bind-key c new-window -c "#{pane_current_path}"

# Move around panes with ALT + Arrow keys.
# bind-key -n M-Up select-pane -U
# bind-key -n M-Left select-pane -L
# bind-key -n M-Down select-pane -D
# bind-key -n M-Right select-pane -R

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Move around panes with
bind-key k select-pane -U
bind-key h select-pane -L
bind-key j select-pane -D
bind-key l select-pane -R


# Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize Pane
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'c-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'c-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'c-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'c-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Use Alt-vim keys without prefix key to switch panes
#bind -n M-h select-pane -L
#bind -n M-j select-pane -D
#bind -n M-k select-pane -U
#bind -n M-l select-pane -R

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

bind Escape copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

cond1="$(echo $ENV_WSL | grep -q 1)"
if-shell "$cond1" 'bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "win32yank.exe -i";'
if-shell "$cond1" 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "win32yank.exe -i";'
if-shell "$cond1" 'unbind-key -T prefix p;'
if-shell "$cond1" 'bind-key p run "win32yank.exe -o | tmux load-buffer - && tmux paste-buffer"'

cond2="[ -z $ENV_WSL ]"
if-shell -b "$cond2" 'bind-key -T copy-mode-vi "y" send -X copy-pipe-and-cancel "xclip -sel clip -i"'
if-shell "$cond2" 'unbind p'
if-shell "$cond2" 'bind p paste-buffer'
if-shell "$cond2" 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"'

#bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
# Copy to clipboard using mouse
set-option -s set-clipboard off

# Confirm before quitting
bind q confirm-before -p "kill-session ? (y/n)" kill-session

# pane movement

# Send the current pane **to** :<window-no> eg. C-q C-t :1
# ':' is important -> ':1' represents window 1 whereas '1' represents pane 1
bind-key C-t command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Join a pane from window # Not particularly useful though
bind-key C-j command-prompt -p "join pane from:"  "join-pane -s '%%'"

# Break the current pane to its own window Super Useful: Vignesh
bind-key b break-pane

# Kill all panes except the current pane
bind-key c confirm-before -p "Kill current panes ? (y/n)" "kill-pane"
bind-key o confirm-before -p "Kill remaining panes ? (y/n)" "kill-pane -a"
bind-key X confirm-before -p "Kill remaining panes ? (y/n)" "kill-pane -a"
bind-key O confirm-before -p "Kill remaining windows ? (y/n)" "kill-window -a"
bind-key C-X confirm-before -p "Kill remaining windows ? (y/n)" "kill-window -a"


# run <prefix> + I to reload the configurations
# List of plugins.
set -g @plugin 'tmux-plugins/tpm'

# <prefix> C-s and <prefix> C-r
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-cpu'

# Sensible TMUX Options
set -g @plugin 'tmux-plugins/tmux-sensible'

# This sets the contents of status bar of TMUX as well as its colors.
# set -g @tmux-gruvbox 'dark' # or 'light'
# set -g @plugin 'egel/tmux-gruvbox'
set -g @plugin 'dracula/tmux'
set -g @dracula-ram-usage true
set -g @dracula-show-powerline true
set -g @dracula-show-location false
set -g @dracula-show-fahrenheit false
set -g @dracula-show-flags true

set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'tmux-plugins/tmux-yank'

# Settings for tmux-recurrect:
set -g @resurrect-save-bash-history 'on'

# Initialize TPM (keep this line at the very bottom of your tmux.conf).
run -b '~/.tmux/plugins/tpm/tpm'


# if run as "tmux attach", create a session if one does not already exist
# Also `THIS IS WHAT STARTS LINUX IN HOME DIRECTORY`
# new-session -n $HOST -c $HOME
